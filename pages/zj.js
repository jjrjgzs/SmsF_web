var 渐渐侧滑删除1 = new 渐渐侧滑删除("渐渐侧滑删除1",渐渐侧滑删除1_项目被单击,渐渐侧滑删除1_滑动按钮1被单击,渐渐侧滑删除1_滑动按钮2被单击,渐渐侧滑删除1_滑动按钮3被单击);
var 弹出面板1 = new 弹出面板("弹出面板1",null,null,null,null);
var 标签1 = new 标签("标签1",null);
var 编辑框1 = new 编辑框("编辑框1",null,null,null,null,null);
var 标签2 = new 标签("标签2",null);
var 编辑框2 = new 编辑框("编辑框2",null,null,null,null,null);
var 标签3 = new 标签("标签3",null);
var 编辑框3 = new 编辑框("编辑框3",null,null,null,null,null);
var 按钮组1 = new 按钮组("按钮组1",按钮组1_被单击);
var 图片框1 = new 图片框("图片框1",图片框1_被单击,null);
    window.onload=function(){ 
        主机列表_创建完毕();
        document.getElementsByClassName("mui-content")[0].style.display="";
    }

	var 当前项目=0;
	var 是否测试=false;

function 主机列表_创建完毕(){
	弹出面板1.初始化("10px",""+(窗口操作.取窗口高度()/2-155)+"px",窗口操作.取窗口宽度()-20+"px","310px");
	弹出面板1.添加组件到外层("图片框1");
	弹出面板1.添加组件("标签1");
	弹出面板1.添加组件("编辑框1");
	弹出面板1.添加组件("标签2");
	弹出面板1.添加组件("编辑框2");
	弹出面板1.添加组件("标签3");
	弹出面板1.添加组件("编辑框3");
	弹出面板1.添加组件("按钮组1");
	图片框1.置顶边("330px");
	标签1.置外边距(5,0,5,0);
	标签2.置外边距(10,0,5,0);
	标签3.置外边距(10,0,5,0);
	按钮组1.置外边距(10,5,0,5);

	按钮组1.置样式(0,"mui-btn mui-btn-danger");
	初始化列表();
	公用模块.发送网络请求(处理在线主机,"/battery/query");

}
function 初始化列表(){
	var 计次=0;
	var 分割;
	var 列表;
	var 主机="";

	主机=公用模块.读取设置("主机列表");
	分割=公用模块.分割文本(主机,"\n");
	while(计次<公用模块.取数组成员数(分割)){
		列表=公用模块.分割文本(分割[计次],"#");
		if(列表[0]!="" ){
			渐渐侧滑删除1.添加项目(列表[0],"",列表[1],"","","#0088FF","","images/sy.png","编辑","断开","删除",列表[2]);

		}

		计次=计次+1;
	}
	window.parent.设置角标(0,渐渐侧滑删除1.取项目总数());
}
function 保存主机数据(){
	var 计次=0;
	var 主机="";
	while(计次<渐渐侧滑删除1.取项目总数()){
		主机=主机+渐渐侧滑删除1.取项目标题(计次)+"#"+渐渐侧滑删除1.取项目消息(计次)+"#"+渐渐侧滑删除1.取项目标记(计次)+"\n";
		计次=计次+1;
	}
	公用模块.保存设置("主机列表",主机);
	window.parent.设置角标(0,渐渐侧滑删除1.取项目总数());
}
function 按钮组1_被单击(按钮索引){
	if(按钮索引==0 ){
		测试连接();
		}else{
		添加主机();
	}
}
function 添加主机(){
	var 主机="";
	if(编辑框1.取内容()=="" || 编辑框2.取内容()=="" || 编辑框3.取内容()=="" ){
		公用模块.信息框("提示","请输入完整数据");
		}else{
		if(按钮组1.取标题(1)=="保存编辑" ){
			if(渐渐侧滑删除1.取项目时间(当前项目) == "已连接" ){
				公用模块.保存设置("服务器","");
			    渐渐侧滑删除1.修改图片(当前项目,"images/sy.png");
			    渐渐侧滑删除1.修改时间(当前项目,"");
			}
			渐渐侧滑删除1.修改标题(当前项目,编辑框1.取内容());
			渐渐侧滑删除1.修改消息(当前项目,编辑框2.取内容());
			渐渐侧滑删除1.置项目标记(当前项目,编辑框3.取内容());
			弹出面板1.隐藏();
			}else{
			渐渐侧滑删除1.添加项目(编辑框1.取内容(),"",编辑框2.取内容(),"","","#0088FF","","images/sy.png","编辑","断开","删除",编辑框3.取内容());
			if(公用模块.取文本左边(编辑框1.取内容(),2)=="主机" ){
				编辑框1.置内容("主机"+公用模块.到文本(渐渐侧滑删除1.取项目总数()+1));
			}
		}
		保存主机数据();
		公用模块.弹出提示("已保存");
	}

}
function 测试连接(){
	断开所有主机();
	if(编辑框2.取内容()=="" || 编辑框3.取内容()=="" ){
		公用模块.信息框("提示","请输入完整数据");
		}else{
		公用模块.保存设置("秘钥",编辑框3.取内容());
		公用模块.保存设置("服务器",编辑框2.取内容());
		是否测试=true;
		公用模块.发送网络请求(处理在线主机,"/config/query");
	}
}
function 处理在线主机(发送结果,返回信息){
	var 计次=0;
	var 返回数据={}
    返回数据=返回信息;

	公用模块.关闭等待框();
	if(返回信息.code==200 ){
		公用模块.弹出提示("连接成功");
		if(是否测试==true ){
			if(返回数据.data.extra_device_mark !="" ){
				编辑框1.置内容(返回数据.data.extra_device_mark);
			}

			}else{

			while(计次<渐渐侧滑删除1.取项目总数()){
				if(公用模块.读取设置("服务器")==渐渐侧滑删除1.取项目消息(计次) ){
					渐渐侧滑删除1.修改图片(计次,"images/lj.png");
					渐渐侧滑删除1.修改时间(计次,"已连接");
					渐渐侧滑删除1.置角标(计次,"电量:"+返回数据.data.level);
					}else{
					渐渐侧滑删除1.修改时间(计次,"");
					渐渐侧滑删除1.修改图片(计次,"images/sy.png");
					渐渐侧滑删除1.删除角标(计次);
				}
				计次=计次+1;
			}

		}

		}else{
		公用模块.保存设置("服务器","");
		if(返回数据.msg==undefined ){
			公用模块.弹出提示("连接失败,错误代码∶404");
			}else{
			公用模块.弹出提示("连接失败,错误代码∶"+返回数据.msg);
		}
		断开所有主机();

	}
	是否测试=false;
}
function 断开所有主机(){
	var 计次=0;
	while(计次<渐渐侧滑删除1.取项目总数()){
		渐渐侧滑删除1.修改时间(计次,"");
		渐渐侧滑删除1.修改图片(计次,"images/sy.png");
		渐渐侧滑删除1.删除角标(计次);
		计次=计次+1;
	}
}
function 渐渐侧滑删除1_项目被单击(表项索引){

	if(渐渐侧滑删除1.取项目时间(表项索引)=="已连接" ){
		公用模块.弹出提示("已连接");
		}else{
		公用模块.显示等待框("正在连接...");
		公用模块.保存设置("秘钥",渐渐侧滑删除1.取项目标记(表项索引));
		公用模块.保存设置("服务器",渐渐侧滑删除1.取项目消息(表项索引));
		公用模块.发送网络请求(处理在线主机,"/battery/query");
	}
}
function 渐渐侧滑删除1_滑动按钮1被单击(表项索引){
	当前项目=表项索引;
	按钮组1.置标题(1,"保存编辑");
	编辑框1.置内容(渐渐侧滑删除1.取项目标题(表项索引));
	编辑框2.置内容(渐渐侧滑删除1.取项目消息(表项索引));
	编辑框3.置内容(渐渐侧滑删除1.取项目标记(表项索引));
	渐渐侧滑删除1.恢复滑动位置(表项索引);
	弹出面板1.显示();
}
function 渐渐侧滑删除1_滑动按钮2被单击(表项索引){

	if(渐渐侧滑删除1.取项目时间(表项索引)=="已连接" ){
		公用模块.保存设置("服务器","");
		渐渐侧滑删除1.修改图片(表项索引,"images/sy.png");
		渐渐侧滑删除1.修改时间(表项索引,"");
		渐渐侧滑删除1.删除角标(表项索引);
	}
	渐渐侧滑删除1.恢复滑动位置(表项索引);
}
function 渐渐侧滑删除1_滑动按钮3被单击(表项索引){

	if(渐渐侧滑删除1.取项目时间(表项索引)=="已连接" ){
		公用模块.保存设置("服务器","");
	}
	渐渐侧滑删除1.删除项目(表项索引);
	保存主机数据();
	公用模块.弹出提示("已删除");
}
function 右侧图标被单击(){
	var protocol = window.location.protocol;
	if (protocol === "https:") {
		protocol="https://";
	} else {
		protocol="http://";
	}
	编辑框1.置内容("主机"+公用模块.到文本(渐渐侧滑删除1.取项目总数()+1));
	编辑框2.置内容(protocol);
	编辑框3.置内容("");
	按钮组1.置标题(1,"添加");
	弹出面板1.显示();
}
function 左侧图标被单击(){
	公用模块.信息框("提示","右边+号添加主机<br>点击主机列表即可连接<br>主机列表往左滑即可 编辑/断开/删除");
}
function 标题栏被双击(){
	窗口操作.滚动到顶部();
}
function 图片框1_被单击(){
	弹出面板1.隐藏();
}